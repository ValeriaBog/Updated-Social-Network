{"version":3,"file":"static/js/918.a7699d05.chunk.js","mappings":"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","sources":["assets/images/upload-image.svg","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://social-network/./src/components/common/UploadImage/UploadImage.module.css?b1f1","components/common/UploadImage/UploadImage.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileInfo/Contacts/Contacts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social-network/./src/components/Profile/Posts/Post/Post.module.css?59e2","components/Profile/Posts/Post/Post.tsx","components/Profile/Posts/AddPostForm/AddPostForm.tsx","webpack://social-network/./src/components/Profile/Posts/Posts.module.css?138f","components/Profile/Posts/Posts.tsx","components/Profile/Posts/PostsContainer.tsx","components/common/ErrorSnackbar/ErrorSnackbar.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","webpack://social-network/./src/components/common/Textarea/Textarea.module.css?8d89","components/common/Textarea/Textarea.tsx"],"sourcesContent":["var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUploadImage(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 1024 1024\",\n    className: \"icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.312 286.208h503.808v559.104H77.312z\",\n    fill: \"#11111\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.632 342.016h391.68v335.36H133.632z\",\n    fill: \"#FFFFFF\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M189.44 621.568h93.184L236.032 537.6zM375.808 453.632l-93.184 167.936h186.88z\",\n    fill: \"#27aae1\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M637.44 621.568v83.456l337.408-165.376-211.456-432.64-252.928 122.88h110.08l120.32-58.368 127.488 259.584-230.912 113.152z\",\n    fill: \"#11111\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUploadImage);\nexport default __webpack_public_path__ + \"static/media/upload-image.1d08057fc7efcc72dc9a1d6f868a30cf.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__AXP6U\"};","import { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport { UpdateStatusType } from 'redux/reducers/profileReducer'\nimport s from './ProfileStatus.module.css'\n\ntype PropsType = {\n   status: string\n   updateStatus: UpdateStatusType\n}\n\nexport const ProfileStatus: FC<PropsType> = ({ status, updateStatus }) => {\n   const [editMode, setEditMode] = useState(false)\n   const [statusInput, setStatusInput] = useState(status)\n   console.log(status)\n   const toggleEditMode = () => {\n      if (status !== statusInput) {\n         editMode\n            ? updateStatus(statusInput)\n            : setStatusInput(status)\n      }\n\n      setEditMode(!editMode)\n   }\n\n   const onStatusInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n      setStatusInput(e.currentTarget.value)\n   }\n   const onStatusInputFocus = (e: FocusEvent<HTMLInputElement>) => {\n      e.target.select()\n   }\n\n   return !editMode ? (\n      <div className={s.status}>\n         <span onDoubleClick={toggleEditMode}>{status===null?'Good morning, my friends!':status}</span>\n      </div>\n   ) : (\n      <div className={s.status}>\n         <input value={statusInput}\n                onChange={onStatusInputChange}\n                autoFocus\n                onFocus={onStatusInputFocus}\n                onBlur={toggleEditMode}\n                className={s.textField}\n         />\n      </div>\n   )\n}","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"ProfileInfo_row__lZlEc\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1rZXD\",\"photoInfo\":\"ProfileInfo_photoInfo__s6bNc\",\"nameUser\":\"ProfileInfo_nameUser__5Ga2A\",\"infoUser\":\"ProfileInfo_infoUser__c05J7\",\"textInfo\":\"ProfileInfo_textInfo__rbH-9\",\"photoBlock\":\"ProfileInfo_photoBlock__TeTTK\",\"uploadPhoto\":\"ProfileInfo_uploadPhoto__9FxMz\"};","// extracted by mini-css-extract-plugin\nexport default {\"uploadWidget\":\"UploadImage_uploadWidget__UNuf-\",\"uploadButton\":\"UploadImage_uploadButton__Y3C8E\",\"uploadIcon\":\"UploadImage_uploadIcon__+RjvL\"};","import React, {ChangeEvent, FC} from 'react';\r\nimport {ReactComponent as UploadIcon} from './../../../assets/images/upload-image.svg'; // Путь к иконке\r\nimport s from './UploadImage.module.css'\r\n\r\ntype Props = {\r\n    onChange: (e: File) => void\r\n}\r\nexport const UploadWidget: FC<Props> = ({onChange}) => {\r\n\r\n    const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        if (e.target.files!.length) {\r\n            onChange(e.target.files![0])\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.uploadWidget}>\r\n            <label htmlFor=\"file-input\" className={s.uploadButton}>\r\n                <UploadIcon className={s.uploadIcon}/>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                id=\"file-input\"\r\n                onChange={handleFileChange}\r\n                style={{display: 'none'}}\r\n\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import {ContactsType, ProfileType} from \"../../../../redux/types\";\r\nimport {ChangeEvent, FC, FormEvent, useState} from \"react\";\r\nimport s from \"../ProfileInfo.module.css\";\r\n\r\nexport type UserInfoType = Pick<ProfileType,\r\n    'fullName'\r\n    | 'aboutMe'\r\n    | 'lookingForAJob'\r\n    | 'lookingForAJobDescription'\r\n    | 'contacts'>;\r\n\r\ntype PropsForm = {\r\n    profile: ProfileType\r\n    onSubmit: (data: UserInfoType) => void\r\n}\r\nexport const ProfileDataForm: FC<PropsForm> = ({profile, onSubmit}) => {\r\n    const [formData, setFormData] = useState({\r\n        fullName: profile.fullName,\r\n        aboutMe: profile.aboutMe,\r\n        lookingForAJob: profile.lookingForAJob,\r\n        lookingForAJobDescription: profile.lookingForAJobDescription,\r\n        contacts: {\r\n            github: profile.contacts.github,\r\n            vk: profile.contacts.vk,\r\n            facebook: profile.contacts.facebook,\r\n            instagram: profile.contacts.instagram,\r\n            twitter: profile.contacts.twitter,\r\n            website: profile.contacts.website,\r\n            youtube: profile.contacts.youtube,\r\n            mainLink: profile.contacts.mainLink\r\n        }\r\n\r\n    });\r\n\r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\r\n        const {name, value, type} = event.target;\r\n\r\n        if (type === 'checkbox') {\r\n            const isChecked = (event.target as HTMLInputElement).checked;\r\n            setFormData({...formData, [name]: isChecked});\r\n        }\r\n        if (formData.contacts.hasOwnProperty(name)) {\r\n\r\n            return setFormData({...formData, contacts: {...formData.contacts, [name]: value}});\r\n\r\n        }\r\n        setFormData({...formData, [name]: value});\r\n\r\n    };\r\n\r\n    const handleSubmit = (event: FormEvent) => {\r\n        event.preventDefault();\r\n        onSubmit(formData)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button >save</button>\r\n        </div>\r\n        <div className={s.nameUser}>Full name: <input value={formData.fullName}\r\n                                                      name=\"fullName\"\r\n                                                      onChange={handleInputChange}/>\r\n        </div>\r\n        <div className={s.infoUser}>\r\n            <div className={s.textInfo}>About me: <input\r\n                name=\"aboutMe\"\r\n                value={formData.aboutMe}\r\n                onChange={handleInputChange}/>\r\n            </div>\r\n            <div className={s.textInfo}>Looking for a job: <input type={'checkbox'}\r\n                                                                  name=\"lookingForAJob\"\r\n                                                                  checked={formData.lookingForAJob}\r\n                                                                  onChange={handleInputChange}/>\r\n            </div>\r\n            <div className={s.textInfo}>My professional skills: <input\r\n                name=\"lookingForAJobDescription\"\r\n                value={formData.lookingForAJobDescription}\r\n                onChange={handleInputChange}/>\r\n            </div>\r\n            <div className={s.textInfo}>Contacts: {Object.keys(profile.contacts).map((key) => {\r\n                const contactKey = key as keyof ContactsType;\r\n                const contactValue = formData.contacts[contactKey];\r\n\r\n                let error = '';\r\n\r\n\r\n                    const urlPattern = /^(http|https):\\/\\/[^ \"]+$/;\r\n                    if (contactValue && !urlPattern.test(contactValue)) {\r\n                        error = 'Uncorrected URL';\r\n                    }\r\n\r\n                const validation = (value: string, contactKey: string) => {\r\n                    if (contactKey === 'website') {\r\n                        const urlPattern = /^(ftp|http|https):\\/\\/[^ \"]+$/;\r\n                        if (!urlPattern.test(value)) {\r\n                            setFormData({\r\n                                ...formData,\r\n                                contacts: {\r\n                                    ...formData.contacts,\r\n                                    [contactKey]: value\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return <div  key={contactKey}>\r\n                    {contactKey}: <input\r\n                    name={contactKey}\r\n                    value={formData.contacts[contactKey]}\r\n                    onChange={handleInputChange}\r\n                    onBlur={(e)=>{validation(e.target.value, contactKey)}}/>\r\n                    {error && <div style={{ color: 'red' }}>{error}</div>}\r\n                </div>\r\n            })}\r\n            </div>\r\n        </div>\r\n    </form>\r\n}","import {FC} from \"react\";\r\n\r\ntype Props = {\r\n    contactTitle: string,\r\n    contactValue: string\r\n}\r\nexport const Contact: FC<Props> = ({contactTitle, contactValue}) => {\r\n    return <div>{contactTitle}: {contactValue}</div>\r\n}","import {ChangeEvent, FC, useState} from 'react'\nimport userPhoto from 'assets/images/user-1.jpg'\nimport {ContactsType, ProfileType} from 'redux/types'\nimport {Preloader} from 'components/common/Preloader/Preloader'\nimport {ProfileStatus} from './ProfileStatus/ProfileStatus'\nimport s from './ProfileInfo.module.css'\nimport {UpdatePhotoType, UpdateProfileType, UpdateStatusType} from 'redux/reducers/profileReducer'\nimport {UploadWidget} from \"../../common/UploadImage/UploadImage\";\nimport {ProfileDataForm, UserInfoType} from \"./ProfileDataForm/ProfileDataForm\";\nimport {Contact} from \"./Contacts/Contacts\";\n\n\ntype PropsType = {\n    profile: ProfileType | null\n    status: string\n    updateStatus: UpdateStatusType\n    isOwner: boolean\n    savePhoto: UpdatePhotoType\n    saveProfile: UpdateProfileType\n}\nexport const ProfileInfo: FC<PropsType> = ({\n                                               profile,\n                                               status,\n                                               updateStatus,\n                                               isOwner,\n                                               savePhoto,\n                                               saveProfile\n                                           }) => {\n\n    const [editMode, setEdit] = useState(false)\n\n    const goToEditMode = () => {\n        setEdit(true)\n    }\n    const onMainPhotoSelected = (e: File) => {\n        debugger\n        savePhoto(e)\n    }\n\n    const onSubmit = async (data: UserInfoType) => {\n       await saveProfile(data)\n        setEdit(false)\n    }\n\n\n    return !profile ? (\n        <Preloader/>\n    ) : (\n        <div className={s.profile}>\n            <img src=\"https://themified.com/friend-finder/images/covers/1.jpg\" alt=\"wallpaper\"/>\n            <div className={s.row}>\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\n            </div>\n            <div className={s.descriptionBlock}>\n                <div className={s.photoBlock}>\n                    <img src={profile.photos.small ? profile.photos.small : userPhoto}\n                         alt={`Avatar of ${profile.fullName}`}\n                         className={s.photoInfo}/>\n                    <div className={s.uploadPhoto}>{isOwner && <UploadWidget onChange={onMainPhotoSelected}/>}</div>\n                </div>\n                {editMode ?\n                    <ProfileDataForm profile={profile} onSubmit={onSubmit}/> :\n                    <ProfileData profile={profile} isOwner={isOwner} goToEditMode={goToEditMode}/>}\n\n            </div>\n        </div>\n    )\n}\n\ntype PropsProf = {\n    profile: ProfileType\n    isOwner: boolean\n    goToEditMode: () => void\n}\n\nexport const ProfileData: FC<PropsProf> = ({profile, isOwner, goToEditMode}) => {\n    return (\n        <div>\n            {isOwner && <div>\n                <button onClick={goToEditMode}>edit</button>\n            </div>}\n            <div className={s.nameUser}>{profile.fullName}</div>\n            <div className={s.infoUser}>\n                <div className={s.textInfo}>About me: {profile.aboutMe}</div>\n                <div className={s.textInfo}>Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}</div>\n                {profile.lookingForAJob &&\n                    <div className={s.textInfo}>My professional skills: {profile.lookingForAJobDescription}</div>\n                }\n                <div className={s.textInfo}>Contacts: {Object.keys(profile.contacts).map((key) => {\n                    const contactKey = key as keyof ContactsType;\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[contactKey]}/>\n                })}\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__taeMK\"};","import { FC } from 'react'\n\nimport s from './Post.module.css'\n\ntype PropsType = {\n   message: string\n   likesCount?: number\n}\nexport const Post: FC<PropsType> = ({ message, likesCount }) => {\n   return (\n      <div className={s.item}>\n         <img src=\"https://avatars.githubusercontent.com/u/69945902?s=100\"\n              alt=\"avatar\" />\n         {message}\n         <div>\n            <span>like </span><span>{likesCount}</span>\n         </div>\n      </div>\n   )\n}","import { Field, reduxForm } from 'redux-form'\nimport { maxLength, minLength, requiredField } from 'utils/validators'\nimport { Textarea } from 'components/common/Textarea/Textarea'\n\nconst maxLength300 = maxLength(300)\nconst minLength5 = minLength(5)\n\nexport const AddPostReduxForm = reduxForm<AddPostFormData>({\n   form: 'ProfileAddPostForm',\n})(({ handleSubmit, invalid }) => {\n   return (\n      <form onSubmit={handleSubmit}>\n         <Field component={Textarea}\n                validate={[requiredField, minLength5, maxLength300]}\n                name=\"newPostText\"\n                placeholder=\"Post message\"\n         />\n         <div>\n            <button disabled={invalid}>Add post</button>\n         </div>\n      </form>\n   )\n})\n\n// TYPES\nexport type AddPostFormData = {\n   newPostText: string\n}","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"Posts_postsBlock__m036r\",\"posts\":\"Posts_posts__UMYqF\"};","import { FC, memo } from 'react'\n\nimport { PostsPropsType } from './PostsContainer'\nimport { Post } from './Post/Post'\nimport { AddPostFormData, AddPostReduxForm } from 'components/Profile/Posts/AddPostForm/AddPostForm'\n\nimport s from './Posts.module.css'\n\n\nexport const Posts: FC<PostsPropsType> = memo(({ posts, addPost }) => {\n   const addNewPost = (formData: AddPostFormData) => {\n      addPost(formData.newPostText)\n   }\n\n   const postsMap = posts\n      .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />)\n\n   return (\n      <div className={s.postsBlock}>\n         <h3>My posts</h3>\n         <AddPostReduxForm onSubmit={addNewPost} />\n         <div className={s.posts}>\n            {postsMap}\n         </div>\n      </div>\n   )\n})","import { ComponentType } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { AppStateType } from 'redux/store'\nimport { profileActions } from 'redux/reducers/profileReducer'\n\nimport { Posts } from './Posts'\n\nconst mapStateToProps = (state: AppStateType) => ({\n   posts: state.profilePage.posts,\n})\n\nconst mapDispatchToProps = {\n   addPost: profileActions.addPost\n}\n\nexport const PostsContainer = compose<ComponentType>(\n   connect(mapStateToProps, mapDispatchToProps),\n)(Posts)\n\n\n// TYPES\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchPropsType = typeof mapDispatchToProps\n\nexport type PostsPropsType = MapStatePropsType & MapDispatchPropsType","import MuiAlert, {AlertProps} from \"@mui/material/Alert\";\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport {FC, forwardRef, SyntheticEvent} from \"react\";\r\n\r\n\r\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\ntype Props={\r\n    error: string\r\n    closeError: (error: string)=> void\r\n}\r\n\r\nexport const ErrorSnackbar:FC<Props> = ({error, closeError}) => {\r\n\r\n    const handleClose = (event?: SyntheticEvent<any> | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        closeError('')\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={error !== ''} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}","import {FC} from 'react'\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo'\nimport {PostsContainer} from './Posts/PostsContainer'\nimport {ProfilePropsType} from './ProfileContainer'\nimport {ErrorSnackbar} from \"../common/ErrorSnackbar/ErrorSnackbar\";\n\ntype Props = ProfilePropsType & { isOwner: boolean }\n\n\nexport const Profile: FC<Props> = ({\n                                       profile,\n                                       status,\n                                       updateStatus,\n                                       isOwner,\n                                       savePhoto,\n                                       saveProfile,\n                                       error,\n                                       setAppErrorAC\n                                   }) => {\n    return (\n        <div>\n            <ErrorSnackbar error={error} closeError={(error)=>{setAppErrorAC(error)}}/>\n            <ProfileInfo profile={profile}\n                         status={status}\n                         updateStatus={updateStatus}\n                         isOwner={isOwner}\n                         savePhoto={savePhoto}\n                         saveProfile={saveProfile}\n            />\n            <PostsContainer/>\n        </div>\n    )\n}","import { Component, ComponentType } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { AppStateType } from 'redux/store'\nimport { profileActions, profileThunks } from 'redux/reducers/profileReducer'\nimport { Profile } from './Profile'\nimport {appActions} from \"../../redux/reducers/appReducer\";\n\nconst mapStateToProps = (state: AppStateType) => ({\n   profile: state.profilePage.profile,\n   status: state.profilePage.status,\n   authorizedUserId: state.auth.id,\n   isAuth: state.auth.isAuth,\n   error: state.app.error\n})\n\nconst mapDispatchToProps = {\n   ...profileActions,\n   ...profileThunks,\n   ...appActions\n}\n\nconst ProfileContainer = compose<ComponentType>(\n   connect(mapStateToProps, mapDispatchToProps),\n   withRouter,\n)(class extends Component<PropsType> {\n\n   refleshProfile(){\n      const { getUserProfile, match, getStatus, authorizedUserId, history } = this.props\n      let userId = Number(match.params.userId)\n\n      if (!userId && authorizedUserId) {\n         userId = authorizedUserId\n      } else if (!userId && !authorizedUserId) {\n         history.push('/login')\n      }\n\n      getUserProfile(userId)\n      getStatus(userId)\n   }\n   componentDidMount() {\n      this.refleshProfile()\n   }\n\n   componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\n      if(this.props.match.params.userId!== prevProps.match.params.userId){\n         this.refleshProfile()\n      }\n   }\n\n   render() {\n      return <Profile {...this.props} isOwner={!this.props.match.params.userId}/>\n   }\n})\n\nexport default ProfileContainer\n\n// TYPES\ntype PathParamsType = {\n   userId: string\n}\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchPropsType = typeof mapDispatchToProps\n\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType\n\ntype PropsType = RouteComponentProps<PathParamsType> & ProfilePropsType","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"Textarea_formControl__8prTr\",\"error\":\"Textarea_error__ntugN\"};","import { FC } from 'react'\nimport { WrappedFieldProps } from 'redux-form/lib/Field'\n\nimport cls from './Textarea.module.css'\n\nexport const Textarea: FC<WrappedFieldProps> = ({ input, meta, ...rest }) => {\n   const hasError = !meta.pristine && meta.error\n\n   const textareaStyles = cls.formControl + (hasError ? ' ' + cls.error : '')\n\n   return (\n      <div className={textareaStyles}>\n         <textarea {...input} {...rest} />\n         {hasError && <span>{meta.error}</span>}\n      </div>\n   )\n}"],"names":["_path","_path2","_path3","_path4","ProfileStatus","status","updateStatus","useState","editMode","setEditMode","statusInput","setStatusInput","console","log","toggleEditMode","className","s","value","onChange","e","currentTarget","autoFocus","onFocus","target","select","onBlur","onDoubleClick","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgUploadImage","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","id","d","fill","ForwardRef","UploadWidget","htmlFor","type","files","style","display","ProfileDataForm","profile","onSubmit","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","formData","setFormData","handleInputChange","event","name","isChecked","checked","preventDefault","map","contactKey","contactValue","error","test","validation","color","Contact","contactTitle","ProfileInfo","isOwner","savePhoto","saveProfile","setEdit","data","src","alt","photos","small","userPhoto","ProfileData","goToEditMode","Preloader","onClick","Post","message","likesCount","maxLength300","maxLength","minLength5","minLength","AddPostReduxForm","reduxForm","form","handleSubmit","invalid","Field","component","Textarea","validate","requiredField","placeholder","disabled","Posts","memo","posts","addPost","postsMap","p","newPostText","mapDispatchToProps","profileActions","PostsContainer","compose","connect","state","profilePage","Alert","forwardRef","elevation","variant","ErrorSnackbar","closeError","handleClose","reason","Snackbar","open","autoHideDuration","onClose","severity","sx","Profile","setAppErrorAC","profileThunks","appActions","ProfileContainer","authorizedUserId","auth","isAuth","app","withRouter","getUserProfile","match","getStatus","history","userId","Number","params","push","refleshProfile","prevProps","prevState","snapshot","Component","input","meta","rest","hasError","pristine","textareaStyles","cls"],"sourceRoot":""}